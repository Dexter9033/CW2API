{
  "version": 3,
  "sources": ["../../routes/users.ts"],
  "sourcesContent": ["import * as model from '../models/users'\nimport Router from 'koa-router'\nimport bodyParser from 'koa-bodyparser'\nimport auth from '../controllers/auth'\n\nconst prefix = '/api/v1/users'\nconst router = Router({prefix: prefix})\n\n\n\nasync function getAll(ctx,next){\n  const result = await model.getAll(20,1)\n  if(result.length){\n    ctx.body = result\n  }\n}\n\nasync function getById(ctx){\n  const id = ctx.params.id\n  const result = await model.getByUserId(id)\n  if(result.length){\n    ctx.body = result[0]\n  }\n}\n\nasync function createUser(ctx){\n  const body = ctx.request.body\n  const result = await model.add(body)\n  if(result){\n    ctx.status = 201\n    ctx.body = result\n  }\n}\n\nasync function login(ctx){\n  const {id, username, email, avatarurl, role} = ctx.state.user\n  const links = {\n    self: `https://${ctx.host}${prefix}/${id}`\n  }\n  ctx.body = {id, username, email, avatarurl, role, links}\n}\n\n\nrouter.get('/', getAll)\nrouter.get('/:id([0-9]{1,})', getById)\nrouter.post('/', bodyParser(), createUser)\nrouter.post('/login', auth, login)\n\nexport {router}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAuB;AACvB,wBAAmB;AACnB,4BAAuB;AACvB,kBAAiB;AAEjB,MAAM,SAAS;AACf,MAAM,aAAS,kBAAAA,SAAO,EAAC,OAAc,CAAC;AAItC,eAAe,OAAO,KAAI,MAAK;AAC7B,QAAM,SAAS,MAAM,MAAM,OAAO,IAAG,CAAC;AACtC,MAAG,OAAO,QAAO;AACf,QAAI,OAAO;AAAA,EACb;AACF;AAEA,eAAe,QAAQ,KAAI;AACzB,QAAM,KAAK,IAAI,OAAO;AACtB,QAAM,SAAS,MAAM,MAAM,YAAY,EAAE;AACzC,MAAG,OAAO,QAAO;AACf,QAAI,OAAO,OAAO;AAAA,EACpB;AACF;AAEA,eAAe,WAAW,KAAI;AAC5B,QAAM,OAAO,IAAI,QAAQ;AACzB,QAAM,SAAS,MAAM,MAAM,IAAI,IAAI;AACnC,MAAG,QAAO;AACR,QAAI,SAAS;AACb,QAAI,OAAO;AAAA,EACb;AACF;AAEA,eAAe,MAAM,KAAI;AACvB,QAAM,EAAC,IAAI,UAAU,OAAO,WAAW,KAAI,IAAI,IAAI,MAAM;AACzD,QAAM,QAAQ;AAAA,IACZ,MAAM,WAAW,IAAI,OAAO,UAAU;AAAA,EACxC;AACA,MAAI,OAAO,EAAC,IAAI,UAAU,OAAO,WAAW,MAAM,MAAK;AACzD;AAGA,OAAO,IAAI,KAAK,MAAM;AACtB,OAAO,IAAI,mBAAmB,OAAO;AACrC,OAAO,KAAK,SAAK,sBAAAC,SAAW,GAAG,UAAU;AACzC,OAAO,KAAK,UAAU,YAAAC,SAAM,KAAK;",
  "names": ["Router", "bodyParser", "auth"]
}
