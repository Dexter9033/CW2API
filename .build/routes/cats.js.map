{
  "version": 3,
  "sources": ["../../routes/cats.ts"],
  "sourcesContent": ["import Router, { RouterContext } from \"koa-router\"\nimport bodyParser from \"koa-bodyparser\"\n\n//load local file\nimport * as model from '../models/cats'\nimport { basicAuth } from \"../controllers/auth\"\n\n//create router path\nconst router = new Router({ prefix: '/api/v1/cats' })\n\nconst getAll = async (ctx: RouterContext) => {\n  const articles = await model.getAll()\n  if (articles.length) {\n    ctx.body = articles\n  } else {\n    ctx.body = {}\n  }\n}\n\nconst getById = async (ctx: RouterContext) => {\n  const id = ctx.params.id\n  const article = await model.getById(id)\n  if (article.length) {\n    ctx.body = article[0]\n  } else {\n    ctx.status = 404\n  }\n}\n\nasync function createArticle(ctx) {\n  const body = ctx.request.body\n  const result = await model.add(body)\n  if (result) {\n    ctx.status = 201\n    ctx.body = result\n  }\n}\n\nasync function deleteArticle(ctx) {\n  const id = ctx.params.id\n  const result = await model.deleteById(id)\n  if (result) {\n    ctx.status = 201\n    ctx.body = `Article with id ${id} deleted`\n  }\n}\n\nasync function updateArticle(ctx) {\n  const body = ctx.request.body\n  const id = ctx.params.id\n  const result = await model.update(body, id)\n  if (result) {\n    ctx.status = 201\n    ctx.body = `Article with id ${id} updated`\n  }\n}\n\n\nrouter.get('/', getAll)\nrouter.get('/:id([0-9]{1,})', getById)\nrouter.post('/', bodyParser(), createArticle)\nrouter.del('/:id([0-9]{1,})', deleteArticle)\nrouter.put('/:id([0-9]{1,})', bodyParser(), updateArticle)\n\nexport { router }"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAsC;AACtC,4BAAuB;AAGvB,YAAuB;AAIvB,MAAM,SAAS,IAAI,kBAAAA,QAAO,EAAE,QAAQ,eAAe,CAAC;AAEpD,MAAM,SAAS,OAAO,QAAuB;AAC3C,QAAM,WAAW,MAAM,MAAM,OAAO;AACpC,MAAI,SAAS,QAAQ;AACnB,QAAI,OAAO;AAAA,EACb,OAAO;AACL,QAAI,OAAO,CAAC;AAAA,EACd;AACF;AAEA,MAAM,UAAU,OAAO,QAAuB;AAC5C,QAAM,KAAK,IAAI,OAAO;AACtB,QAAM,UAAU,MAAM,MAAM,QAAQ,EAAE;AACtC,MAAI,QAAQ,QAAQ;AAClB,QAAI,OAAO,QAAQ;AAAA,EACrB,OAAO;AACL,QAAI,SAAS;AAAA,EACf;AACF;AAEA,eAAe,cAAc,KAAK;AAChC,QAAM,OAAO,IAAI,QAAQ;AACzB,QAAM,SAAS,MAAM,MAAM,IAAI,IAAI;AACnC,MAAI,QAAQ;AACV,QAAI,SAAS;AACb,QAAI,OAAO;AAAA,EACb;AACF;AAEA,eAAe,cAAc,KAAK;AAChC,QAAM,KAAK,IAAI,OAAO;AACtB,QAAM,SAAS,MAAM,MAAM,WAAW,EAAE;AACxC,MAAI,QAAQ;AACV,QAAI,SAAS;AACb,QAAI,OAAO,mBAAmB;AAAA,EAChC;AACF;AAEA,eAAe,cAAc,KAAK;AAChC,QAAM,OAAO,IAAI,QAAQ;AACzB,QAAM,KAAK,IAAI,OAAO;AACtB,QAAM,SAAS,MAAM,MAAM,OAAO,MAAM,EAAE;AAC1C,MAAI,QAAQ;AACV,QAAI,SAAS;AACb,QAAI,OAAO,mBAAmB;AAAA,EAChC;AACF;AAGA,OAAO,IAAI,KAAK,MAAM;AACtB,OAAO,IAAI,mBAAmB,OAAO;AACrC,OAAO,KAAK,SAAK,sBAAAC,SAAW,GAAG,aAAa;AAC5C,OAAO,IAAI,mBAAmB,aAAa;AAC3C,OAAO,IAAI,uBAAmB,sBAAAA,SAAW,GAAG,aAAa;",
  "names": ["Router", "bodyParser"]
}
